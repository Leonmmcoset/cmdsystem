# encoding: utf-8
# module panda3d.core
# from C:\Users\leonm\PycharmProjects\leonsystem\venv\Lib\site-packages\panda3d\core.cp311-win_amd64.pyd
# by generator 1.147
# no doc

# imports
import dtoolconfig as __dtoolconfig
import enum as __enum


from .FreetypeFont import FreetypeFont

class PNMTextMaker(FreetypeFont):
    """
    /**
     * This object uses the Freetype library to generate text directly into an
     * image.  It is different from the TextNode/DynamicTextFont interface, which
     * use the Freetype library to generate text in the scene graph, to be
     * rendered onscreen via the Panda render traversal.
     */
    """
    def calcWidth(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        calc_width(const PNMTextMaker self, unicode text)
        calc_width(const PNMTextMaker self, str text)
        
        /**
         * Returns the width in pixels of the indicated line of text.
         */
        
        /**
         * Returns the width in pixels of the indicated line of text.
         */
        """
        pass

    def calc_width(self, const_PNMTextMaker_self, unicode_text): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        calc_width(const PNMTextMaker self, unicode text)
        calc_width(const PNMTextMaker self, str text)
        
        /**
         * Returns the width in pixels of the indicated line of text.
         */
        
        /**
         * Returns the width in pixels of the indicated line of text.
         */
        """
        pass

    def generateInto(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        generate_into(const PNMTextMaker self, unicode text, PNMImage dest_image, int x, int y)
        generate_into(const PNMTextMaker self, str text, PNMImage dest_image, int x, int y)
        
        /**
         * Generates a single line of text into the indicated image at the indicated
         * position; the return value is the total width in pixels.
         */
        
        /**
         * Generates a single line of text into the indicated image at the indicated
         * position; the return value is the total width in pixels.
         */
        """
        pass

    def generate_into(self, const_PNMTextMaker_self, unicode_text, PNMImage_dest_image, int_x, int_y): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        generate_into(const PNMTextMaker self, unicode text, PNMImage dest_image, int x, int y)
        generate_into(const PNMTextMaker self, str text, PNMImage dest_image, int x, int y)
        
        /**
         * Generates a single line of text into the indicated image at the indicated
         * position; the return value is the total width in pixels.
         */
        
        /**
         * Generates a single line of text into the indicated image at the indicated
         * position; the return value is the total width in pixels.
         */
        """
        pass

    def getAlign(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        get_align(PNMTextMaker self)
        
        /**
         *
         */
        """
        pass

    def getDistanceFieldRadius(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        get_distance_field_radius(PNMTextMaker self)
        
        /**
         * Returns the radius previously set with set_distance_field_radius, or 0
         * otherwise.
         */
        """
        pass

    def getFg(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        get_fg(PNMTextMaker self)
        
        /**
         * Returns the foreground color of text that will be generated by future calls
         * to generate_into().
         */
        """
        pass

    def getGlyph(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        get_glyph(const PNMTextMaker self, int character)
        
        /**
         * Returns the glyph for the indicated index, or NULL if it is not defined in
         * the font.
         */
        """
        pass

    def getInterior(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        get_interior(PNMTextMaker self)
        
        /**
         * Returns the color that will be used to render the interior portions of
         * hollow fonts.
         */
        """
        pass

    def getInteriorFlag(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        get_interior_flag(PNMTextMaker self)
        
        /**
         *
         */
        """
        pass

    def get_align(self, PNMTextMaker_self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        get_align(PNMTextMaker self)
        
        /**
         *
         */
        """
        pass

    def get_distance_field_radius(self, PNMTextMaker_self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        get_distance_field_radius(PNMTextMaker self)
        
        /**
         * Returns the radius previously set with set_distance_field_radius, or 0
         * otherwise.
         */
        """
        pass

    def get_fg(self, PNMTextMaker_self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        get_fg(PNMTextMaker self)
        
        /**
         * Returns the foreground color of text that will be generated by future calls
         * to generate_into().
         */
        """
        pass

    def get_glyph(self, const_PNMTextMaker_self, int_character): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        get_glyph(const PNMTextMaker self, int character)
        
        /**
         * Returns the glyph for the indicated index, or NULL if it is not defined in
         * the font.
         */
        """
        pass

    def get_interior(self, PNMTextMaker_self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        get_interior(PNMTextMaker self)
        
        /**
         * Returns the color that will be used to render the interior portions of
         * hollow fonts.
         */
        """
        pass

    def get_interior_flag(self, PNMTextMaker_self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        get_interior_flag(PNMTextMaker self)
        
        /**
         *
         */
        """
        pass

    def isValid(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        is_valid(PNMTextMaker self)
        
        /**
         * Returns true if the PNMTextMaker is valid and ready to generate text, false
         * otherwise.
         */
        """
        pass

    def is_valid(self, PNMTextMaker_self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        is_valid(PNMTextMaker self)
        
        /**
         * Returns true if the PNMTextMaker is valid and ready to generate text, false
         * otherwise.
         */
        """
        pass

    def setAlign(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        set_align(const PNMTextMaker self, int align_type)
        
        /**
         *
         */
        """
        pass

    def setDistanceFieldRadius(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        set_distance_field_radius(const PNMTextMaker self, int radius)
        
        /**
         * If this is set to something other than 0, Panda will generate a signed
         * distance field with the given radius.
         */
        """
        pass

    def setFg(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        set_fg(const PNMTextMaker self, const LVecBase4f fg)
        
        /**
         * Sets the foreground color of text that will be generated by future calls to
         * generate_into().  This is the color that all of the "on" pixels in the font
         * will show as.
         */
        """
        pass

    def setInterior(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        set_interior(const PNMTextMaker self, const LVecBase4f interior)
        
        /**
         * Sets the color that will be used to render the interior portions of hollow
         * fonts in future calls to generate_into().  This is respected only if
         * interior_flag is true.
         */
        """
        pass

    def setInteriorFlag(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        set_interior_flag(const PNMTextMaker self, bool interior_flag)
        
        /**
         * Sets the flag that indicates whether the interior of hollow fonts is
         * identified as a preprocess as each glyph is loaded.  If this flag is true,
         * you may specify an interior color along with a fg and bg color when you
         * place text; if the flag is false, the interior color is ignored.
         *
         * It is generally best to set_native_antialias(0) when using this feature.
         * Also, this works best when the pixel size is not very small.
         */
        """
        pass

    def set_align(self, const_PNMTextMaker_self, int_align_type): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        set_align(const PNMTextMaker self, int align_type)
        
        /**
         *
         */
        """
        pass

    def set_distance_field_radius(self, const_PNMTextMaker_self, int_radius): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        set_distance_field_radius(const PNMTextMaker self, int radius)
        
        /**
         * If this is set to something other than 0, Panda will generate a signed
         * distance field with the given radius.
         */
        """
        pass

    def set_fg(self, const_PNMTextMaker_self, const_LVecBase4f_fg): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        set_fg(const PNMTextMaker self, const LVecBase4f fg)
        
        /**
         * Sets the foreground color of text that will be generated by future calls to
         * generate_into().  This is the color that all of the "on" pixels in the font
         * will show as.
         */
        """
        pass

    def set_interior(self, const_PNMTextMaker_self, const_LVecBase4f_interior): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        set_interior(const PNMTextMaker self, const LVecBase4f interior)
        
        /**
         * Sets the color that will be used to render the interior portions of hollow
         * fonts in future calls to generate_into().  This is respected only if
         * interior_flag is true.
         */
        """
        pass

    def set_interior_flag(self, const_PNMTextMaker_self, bool_interior_flag): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        set_interior_flag(const PNMTextMaker self, bool interior_flag)
        
        /**
         * Sets the flag that indicates whether the interior of hollow fonts is
         * identified as a preprocess as each glyph is loaded.  If this flag is true,
         * you may specify an interior color along with a fg and bg color when you
         * place text; if the flag is false, the interior color is ignored.
         *
         * It is generally best to set_native_antialias(0) when using this feature.
         * Also, this works best when the pixel size is not very small.
         */
        """
        pass

    def __copy__(self, *args, **kwargs): # real signature unknown
        pass

    def __deepcopy__(self, *args, **kwargs): # real signature unknown
        pass

    def __init__(self, *args, **kwargs): # real signature unknown
        pass

    @staticmethod # known case of __new__
    def __new__(*args, **kwargs): # real signature unknown
        """ Create and return a new object.  See help(type) for accurate signature. """
        pass

    ACenter = 2
    ALeft = 0
    ARight = 1
    A_center = 2
    A_left = 0
    A_right = 1
    DtoolClassDict = {
        'ACenter': 2,
        'ALeft': 0,
        'ARight': 1,
        'A_center': 2,
        'A_left': 0,
        'A_right': 1,
        'DtoolClassDict': '<value is a self-reference, replaced by this string>',
        '__copy__': None, # (!) real value is "<method '__copy__' of 'panda3d.core.PNMTextMaker' objects>"
        '__deepcopy__': None, # (!) real value is "<method '__deepcopy__' of 'panda3d.core.PNMTextMaker' objects>"
        '__doc__': '/**\n * This object uses the Freetype library to generate text directly into an\n * image.  It is different from the TextNode/DynamicTextFont interface, which\n * use the Freetype library to generate text in the scene graph, to be\n * rendered onscreen via the Panda render traversal.\n */',
        '__init__': None, # (!) real value is "<slot wrapper '__init__' of 'panda3d.core.PNMTextMaker' objects>"
        '__new__': None, # (!) real value is '<built-in method __new__ of type object at 0x00007FFCFE393DB0>'
        'calcWidth': None, # (!) real value is "<method 'calcWidth' of 'panda3d.core.PNMTextMaker' objects>"
        'calc_width': None, # (!) real value is "<method 'calc_width' of 'panda3d.core.PNMTextMaker' objects>"
        'generateInto': None, # (!) real value is "<method 'generateInto' of 'panda3d.core.PNMTextMaker' objects>"
        'generate_into': None, # (!) real value is "<method 'generate_into' of 'panda3d.core.PNMTextMaker' objects>"
        'getAlign': None, # (!) real value is "<method 'getAlign' of 'panda3d.core.PNMTextMaker' objects>"
        'getDistanceFieldRadius': None, # (!) real value is "<method 'getDistanceFieldRadius' of 'panda3d.core.PNMTextMaker' objects>"
        'getFg': None, # (!) real value is "<method 'getFg' of 'panda3d.core.PNMTextMaker' objects>"
        'getGlyph': None, # (!) real value is "<method 'getGlyph' of 'panda3d.core.PNMTextMaker' objects>"
        'getInterior': None, # (!) real value is "<method 'getInterior' of 'panda3d.core.PNMTextMaker' objects>"
        'getInteriorFlag': None, # (!) real value is "<method 'getInteriorFlag' of 'panda3d.core.PNMTextMaker' objects>"
        'get_align': None, # (!) real value is "<method 'get_align' of 'panda3d.core.PNMTextMaker' objects>"
        'get_distance_field_radius': None, # (!) real value is "<method 'get_distance_field_radius' of 'panda3d.core.PNMTextMaker' objects>"
        'get_fg': None, # (!) real value is "<method 'get_fg' of 'panda3d.core.PNMTextMaker' objects>"
        'get_glyph': None, # (!) real value is "<method 'get_glyph' of 'panda3d.core.PNMTextMaker' objects>"
        'get_interior': None, # (!) real value is "<method 'get_interior' of 'panda3d.core.PNMTextMaker' objects>"
        'get_interior_flag': None, # (!) real value is "<method 'get_interior_flag' of 'panda3d.core.PNMTextMaker' objects>"
        'isValid': None, # (!) real value is "<method 'isValid' of 'panda3d.core.PNMTextMaker' objects>"
        'is_valid': None, # (!) real value is "<method 'is_valid' of 'panda3d.core.PNMTextMaker' objects>"
        'setAlign': None, # (!) real value is "<method 'setAlign' of 'panda3d.core.PNMTextMaker' objects>"
        'setDistanceFieldRadius': None, # (!) real value is "<method 'setDistanceFieldRadius' of 'panda3d.core.PNMTextMaker' objects>"
        'setFg': None, # (!) real value is "<method 'setFg' of 'panda3d.core.PNMTextMaker' objects>"
        'setInterior': None, # (!) real value is "<method 'setInterior' of 'panda3d.core.PNMTextMaker' objects>"
        'setInteriorFlag': None, # (!) real value is "<method 'setInteriorFlag' of 'panda3d.core.PNMTextMaker' objects>"
        'set_align': None, # (!) real value is "<method 'set_align' of 'panda3d.core.PNMTextMaker' objects>"
        'set_distance_field_radius': None, # (!) real value is "<method 'set_distance_field_radius' of 'panda3d.core.PNMTextMaker' objects>"
        'set_fg': None, # (!) real value is "<method 'set_fg' of 'panda3d.core.PNMTextMaker' objects>"
        'set_interior': None, # (!) real value is "<method 'set_interior' of 'panda3d.core.PNMTextMaker' objects>"
        'set_interior_flag': None, # (!) real value is "<method 'set_interior_flag' of 'panda3d.core.PNMTextMaker' objects>"
    }


