# encoding: utf-8
# module panda3d.core
# from C:\Users\leonm\PycharmProjects\leonsystem\venv\Lib\site-packages\panda3d\core.cp311-win_amd64.pyd
# by generator 1.147
# no doc

# imports
import dtoolconfig as __dtoolconfig
import enum as __enum


from .LightLensNode import LightLensNode

class DirectionalLight(LightLensNode):
    """
    /**
     * A light shining from infinitely far away in a particular direction, like
     * sunlight.
     */
    """
    def clearSpecularColor(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        clear_specular_color(const DirectionalLight self)
        
        /**
         * Clears a custom specular color setting, meaning that the specular color
         * will now come from the color.
         */
        """
        pass

    def clear_specular_color(self, const_DirectionalLight_self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        clear_specular_color(const DirectionalLight self)
        
        /**
         * Clears a custom specular color setting, meaning that the specular color
         * will now come from the color.
         */
        """
        pass

    def getClassType(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        get_class_type()
        """
        pass

    def getDirection(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        get_direction(DirectionalLight self)
        
        /**
         * Returns the direction in which the light is aimed.  This is local to the
         * coordinate space in which the light is assigned.
         */
        """
        pass

    def getPoint(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        get_point(DirectionalLight self)
        
        /**
         * Returns the point in space at which the light is located.  This is local to
         * the coordinate space in which the light is assigned.
         *
         * This actually has no bearing on the visual effect of the light, since the
         * light is rendered as if it were infinitely far away.  This is only used to
         * create a visible representation of the light.
         */
        """
        pass

    def get_class_type(self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        get_class_type()
        """
        pass

    def get_direction(self, DirectionalLight_self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        get_direction(DirectionalLight self)
        
        /**
         * Returns the direction in which the light is aimed.  This is local to the
         * coordinate space in which the light is assigned.
         */
        """
        pass

    def get_point(self, DirectionalLight_self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        get_point(DirectionalLight self)
        
        /**
         * Returns the point in space at which the light is located.  This is local to
         * the coordinate space in which the light is assigned.
         *
         * This actually has no bearing on the visual effect of the light, since the
         * light is rendered as if it were infinitely far away.  This is only used to
         * create a visible representation of the light.
         */
        """
        pass

    def setDirection(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        set_direction(const DirectionalLight self, const LVector3f direction)
        
        /**
         * Sets the direction in which the light is aimed.
         */
        """
        pass

    def setPoint(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        set_point(const DirectionalLight self, const LPoint3f point)
        
        /**
         * Sets the point in space at which the light is located.
         */
        """
        pass

    def setSpecularColor(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        set_specular_color(const DirectionalLight self, const LVecBase4f color)
        
        /**
         * Sets the color of specular highlights generated by the light.
         */
        """
        pass

    def set_direction(self, const_DirectionalLight_self, const_LVector3f_direction): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        set_direction(const DirectionalLight self, const LVector3f direction)
        
        /**
         * Sets the direction in which the light is aimed.
         */
        """
        pass

    def set_point(self, const_DirectionalLight_self, const_LPoint3f_point): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        set_point(const DirectionalLight self, const LPoint3f point)
        
        /**
         * Sets the point in space at which the light is located.
         */
        """
        pass

    def set_specular_color(self, const_DirectionalLight_self, const_LVecBase4f_color): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        set_specular_color(const DirectionalLight self, const LVecBase4f color)
        
        /**
         * Sets the color of specular highlights generated by the light.
         */
        """
        pass

    def __init__(self, *args, **kwargs): # real signature unknown
        pass

    @staticmethod # known case of __new__
    def __new__(*args, **kwargs): # real signature unknown
        """ Create and return a new object.  See help(type) for accurate signature. """
        pass

    direction = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default

    point = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default

    specular_color = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default


    DtoolClassDict = {
        'DtoolClassDict': '<value is a self-reference, replaced by this string>',
        '__doc__': '/**\n * A light shining from infinitely far away in a particular direction, like\n * sunlight.\n */',
        '__init__': None, # (!) real value is "<slot wrapper '__init__' of 'panda3d.core.DirectionalLight' objects>"
        '__new__': None, # (!) real value is '<built-in method __new__ of type object at 0x00007FFCFE287700>'
        'clearSpecularColor': None, # (!) real value is "<method 'clearSpecularColor' of 'panda3d.core.DirectionalLight' objects>"
        'clear_specular_color': None, # (!) real value is "<method 'clear_specular_color' of 'panda3d.core.DirectionalLight' objects>"
        'direction': None, # (!) real value is "<attribute 'direction' of 'panda3d.core.DirectionalLight' objects>"
        'getClassType': None, # (!) real value is '<staticmethod(<built-in method getClassType of type object at 0x00007FFCFE287700>)>'
        'getDirection': None, # (!) real value is "<method 'getDirection' of 'panda3d.core.DirectionalLight' objects>"
        'getPoint': None, # (!) real value is "<method 'getPoint' of 'panda3d.core.DirectionalLight' objects>"
        'get_class_type': None, # (!) real value is '<staticmethod(<built-in method get_class_type of type object at 0x00007FFCFE287700>)>'
        'get_direction': None, # (!) real value is "<method 'get_direction' of 'panda3d.core.DirectionalLight' objects>"
        'get_point': None, # (!) real value is "<method 'get_point' of 'panda3d.core.DirectionalLight' objects>"
        'point': None, # (!) real value is "<attribute 'point' of 'panda3d.core.DirectionalLight' objects>"
        'setDirection': None, # (!) real value is "<method 'setDirection' of 'panda3d.core.DirectionalLight' objects>"
        'setPoint': None, # (!) real value is "<method 'setPoint' of 'panda3d.core.DirectionalLight' objects>"
        'setSpecularColor': None, # (!) real value is "<method 'setSpecularColor' of 'panda3d.core.DirectionalLight' objects>"
        'set_direction': None, # (!) real value is "<method 'set_direction' of 'panda3d.core.DirectionalLight' objects>"
        'set_point': None, # (!) real value is "<method 'set_point' of 'panda3d.core.DirectionalLight' objects>"
        'set_specular_color': None, # (!) real value is "<method 'set_specular_color' of 'panda3d.core.DirectionalLight' objects>"
        'specular_color': None, # (!) real value is "<attribute 'specular_color' of 'panda3d.core.DirectionalLight' objects>"
    }


