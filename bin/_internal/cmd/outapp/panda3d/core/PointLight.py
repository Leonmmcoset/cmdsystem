# encoding: utf-8
# module panda3d.core
# from C:\Users\leonm\PycharmProjects\leonsystem\venv\Lib\site-packages\panda3d\core.cp311-win_amd64.pyd
# by generator 1.147
# no doc

# imports
import dtoolconfig as __dtoolconfig
import enum as __enum


from .LightLensNode import LightLensNode

class PointLight(LightLensNode):
    """
    /**
     * A light originating from a single point in space, and shining in all
     * directions.
     */
    """
    def clearSpecularColor(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        clear_specular_color(const PointLight self)
        
        /**
         * Clears a custom specular color setting, meaning that the specular color
         * will now come from the color.
         */
        """
        pass

    def clear_specular_color(self, const_PointLight_self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        clear_specular_color(const PointLight self)
        
        /**
         * Clears a custom specular color setting, meaning that the specular color
         * will now come from the color.
         */
        """
        pass

    def getClassType(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        get_class_type()
        """
        pass

    def getMaxDistance(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        get_max_distance(PointLight self)
        
        /**
         * Returns the maximum distance at which the light has any effect, as previously
         * specified by set_max_distance.
         */
        """
        pass

    def getPoint(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        get_point(PointLight self)
        
        /**
         * Returns the point in space at which the light is located.  This is local to
         * the coordinate space in which the light is assigned, and is usually 0.
         */
        """
        pass

    def get_class_type(self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        get_class_type()
        """
        pass

    def get_max_distance(self, PointLight_self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        get_max_distance(PointLight self)
        
        /**
         * Returns the maximum distance at which the light has any effect, as previously
         * specified by set_max_distance.
         */
        """
        pass

    def get_point(self, PointLight_self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        get_point(PointLight self)
        
        /**
         * Returns the point in space at which the light is located.  This is local to
         * the coordinate space in which the light is assigned, and is usually 0.
         */
        """
        pass

    def setAttenuation(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        set_attenuation(const PointLight self, const LVecBase3f attenuation)
        
        /**
         * Sets the terms of the attenuation equation for the light.  These are, in
         * order, the constant, linear, and quadratic terms based on the distance from
         * the point to the vertex.
         */
        """
        pass

    def setMaxDistance(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        set_max_distance(const PointLight self, float max_distance)
        
        /**
         * Sets the radius of the light's sphere of influence.  Beyond this distance, the
         * light may be attenuated to zero, if this is supported by the shader.
         */
        """
        pass

    def setPoint(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        set_point(const PointLight self, const LPoint3f point)
        
        /**
         * Sets the point in space at which the light is located.  Usually 0.
         */
        """
        pass

    def setSpecularColor(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        set_specular_color(const PointLight self, const LVecBase4f color)
        
        /**
         * Sets the color of specular highlights generated by the light.
         */
        """
        pass

    def set_attenuation(self, const_PointLight_self, const_LVecBase3f_attenuation): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        set_attenuation(const PointLight self, const LVecBase3f attenuation)
        
        /**
         * Sets the terms of the attenuation equation for the light.  These are, in
         * order, the constant, linear, and quadratic terms based on the distance from
         * the point to the vertex.
         */
        """
        pass

    def set_max_distance(self, const_PointLight_self, float_max_distance): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        set_max_distance(const PointLight self, float max_distance)
        
        /**
         * Sets the radius of the light's sphere of influence.  Beyond this distance, the
         * light may be attenuated to zero, if this is supported by the shader.
         */
        """
        pass

    def set_point(self, const_PointLight_self, const_LPoint3f_point): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        set_point(const PointLight self, const LPoint3f point)
        
        /**
         * Sets the point in space at which the light is located.  Usually 0.
         */
        """
        pass

    def set_specular_color(self, const_PointLight_self, const_LVecBase4f_color): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        set_specular_color(const PointLight self, const LVecBase4f color)
        
        /**
         * Sets the color of specular highlights generated by the light.
         */
        """
        pass

    def __init__(self, *args, **kwargs): # real signature unknown
        pass

    @staticmethod # known case of __new__
    def __new__(*args, **kwargs): # real signature unknown
        """ Create and return a new object.  See help(type) for accurate signature. """
        pass

    attenuation = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default

    max_distance = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default

    point = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default

    specular_color = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default


    DtoolClassDict = {
        'DtoolClassDict': '<value is a self-reference, replaced by this string>',
        '__doc__': '/**\n * A light originating from a single point in space, and shining in all\n * directions.\n */',
        '__init__': None, # (!) real value is "<slot wrapper '__init__' of 'panda3d.core.PointLight' objects>"
        '__new__': None, # (!) real value is '<built-in method __new__ of type object at 0x00007FFCFE287E40>'
        'attenuation': None, # (!) real value is "<attribute 'attenuation' of 'panda3d.core.PointLight' objects>"
        'clearSpecularColor': None, # (!) real value is "<method 'clearSpecularColor' of 'panda3d.core.PointLight' objects>"
        'clear_specular_color': None, # (!) real value is "<method 'clear_specular_color' of 'panda3d.core.PointLight' objects>"
        'getClassType': None, # (!) real value is '<staticmethod(<built-in method getClassType of type object at 0x00007FFCFE287E40>)>'
        'getMaxDistance': None, # (!) real value is "<method 'getMaxDistance' of 'panda3d.core.PointLight' objects>"
        'getPoint': None, # (!) real value is "<method 'getPoint' of 'panda3d.core.PointLight' objects>"
        'get_class_type': None, # (!) real value is '<staticmethod(<built-in method get_class_type of type object at 0x00007FFCFE287E40>)>'
        'get_max_distance': None, # (!) real value is "<method 'get_max_distance' of 'panda3d.core.PointLight' objects>"
        'get_point': None, # (!) real value is "<method 'get_point' of 'panda3d.core.PointLight' objects>"
        'max_distance': None, # (!) real value is "<attribute 'max_distance' of 'panda3d.core.PointLight' objects>"
        'point': None, # (!) real value is "<attribute 'point' of 'panda3d.core.PointLight' objects>"
        'setAttenuation': None, # (!) real value is "<method 'setAttenuation' of 'panda3d.core.PointLight' objects>"
        'setMaxDistance': None, # (!) real value is "<method 'setMaxDistance' of 'panda3d.core.PointLight' objects>"
        'setPoint': None, # (!) real value is "<method 'setPoint' of 'panda3d.core.PointLight' objects>"
        'setSpecularColor': None, # (!) real value is "<method 'setSpecularColor' of 'panda3d.core.PointLight' objects>"
        'set_attenuation': None, # (!) real value is "<method 'set_attenuation' of 'panda3d.core.PointLight' objects>"
        'set_max_distance': None, # (!) real value is "<method 'set_max_distance' of 'panda3d.core.PointLight' objects>"
        'set_point': None, # (!) real value is "<method 'set_point' of 'panda3d.core.PointLight' objects>"
        'set_specular_color': None, # (!) real value is "<method 'set_specular_color' of 'panda3d.core.PointLight' objects>"
        'specular_color': None, # (!) real value is "<attribute 'specular_color' of 'panda3d.core.PointLight' objects>"
    }


