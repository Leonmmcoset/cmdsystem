# encoding: utf-8
# module panda3d.direct
# from C:\Users\leonm\PycharmProjects\leonsystem\venv\Lib\site-packages\panda3d\direct.cp311-win_amd64.pyd
# by generator 1.147
# no doc

# imports
import dtoolconfig as __dtoolconfig
import panda3d.core as __panda3d_core


from .DCDeclaration import DCDeclaration

class DCTypedef(DCDeclaration):
    """
    /**
     * This represents a single typedef declaration in the dc file.  It assigns a
     * particular type to a new name, just like a C typedef.
     */
    """
    def getDescription(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        get_description(DCTypedef self)
        
        /**
         * Returns a brief decription of the typedef, useful for human consumption.
         */
        """
        pass

    def getName(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        get_name(DCTypedef self)
        
        /**
         * Returns the name of this typedef.
         */
        """
        pass

    def getNumber(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        get_number(DCTypedef self)
        
        /**
         * Returns a unique index number associated with this typedef definition.
         * This is defined implicitly when the .dc file(s) are read.
         */
        """
        pass

    def get_description(self, DCTypedef_self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        get_description(DCTypedef self)
        
        /**
         * Returns a brief decription of the typedef, useful for human consumption.
         */
        """
        pass

    def get_name(self, DCTypedef_self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        get_name(DCTypedef self)
        
        /**
         * Returns the name of this typedef.
         */
        """
        pass

    def get_number(self, DCTypedef_self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        get_number(DCTypedef self)
        
        /**
         * Returns a unique index number associated with this typedef definition.
         * This is defined implicitly when the .dc file(s) are read.
         */
        """
        pass

    def isBogusTypedef(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        is_bogus_typedef(DCTypedef self)
        
        /**
         * Returns true if the typedef has been flagged as a bogus typedef.  This is
         * set for typedefs that are generated by the parser as placeholder for
         * missing typedefs, as when reading a partial file; it should not occur in a
         * normal valid dc file.
         */
        """
        pass

    def isImplicitTypedef(self, *args, **kwargs): # real signature unknown
        """
        C++ Interface:
        is_implicit_typedef(DCTypedef self)
        
        /**
         * Returns true if the typedef has been flagged as an implicit typedef,
         * meaning it was created for a DCClass that was referenced inline as a type.
         */
        """
        pass

    def is_bogus_typedef(self, DCTypedef_self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        is_bogus_typedef(DCTypedef self)
        
        /**
         * Returns true if the typedef has been flagged as a bogus typedef.  This is
         * set for typedefs that are generated by the parser as placeholder for
         * missing typedefs, as when reading a partial file; it should not occur in a
         * normal valid dc file.
         */
        """
        pass

    def is_implicit_typedef(self, DCTypedef_self): # real signature unknown; restored from __doc__
        """
        C++ Interface:
        is_implicit_typedef(DCTypedef self)
        
        /**
         * Returns true if the typedef has been flagged as an implicit typedef,
         * meaning it was created for a DCClass that was referenced inline as a type.
         */
        """
        pass

    def __init__(self, *args, **kwargs): # real signature unknown
        pass

    @staticmethod # known case of __new__
    def __new__(*args, **kwargs): # real signature unknown
        """ Create and return a new object.  See help(type) for accurate signature. """
        pass

    DtoolClassDict = {
        'DtoolClassDict': '<value is a self-reference, replaced by this string>',
        '__doc__': '/**\n * This represents a single typedef declaration in the dc file.  It assigns a\n * particular type to a new name, just like a C typedef.\n */',
        '__init__': None, # (!) real value is "<slot wrapper '__init__' of 'panda3d.direct.DCTypedef' objects>"
        '__new__': None, # (!) real value is '<built-in method __new__ of type object at 0x00007FFDC68DF650>'
        'getDescription': None, # (!) real value is "<method 'getDescription' of 'panda3d.direct.DCTypedef' objects>"
        'getName': None, # (!) real value is "<method 'getName' of 'panda3d.direct.DCTypedef' objects>"
        'getNumber': None, # (!) real value is "<method 'getNumber' of 'panda3d.direct.DCTypedef' objects>"
        'get_description': None, # (!) real value is "<method 'get_description' of 'panda3d.direct.DCTypedef' objects>"
        'get_name': None, # (!) real value is "<method 'get_name' of 'panda3d.direct.DCTypedef' objects>"
        'get_number': None, # (!) real value is "<method 'get_number' of 'panda3d.direct.DCTypedef' objects>"
        'isBogusTypedef': None, # (!) real value is "<method 'isBogusTypedef' of 'panda3d.direct.DCTypedef' objects>"
        'isImplicitTypedef': None, # (!) real value is "<method 'isImplicitTypedef' of 'panda3d.direct.DCTypedef' objects>"
        'is_bogus_typedef': None, # (!) real value is "<method 'is_bogus_typedef' of 'panda3d.direct.DCTypedef' objects>"
        'is_implicit_typedef': None, # (!) real value is "<method 'is_implicit_typedef' of 'panda3d.direct.DCTypedef' objects>"
    }


